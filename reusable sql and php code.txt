create table posts (
id int(11) not null PRIMARY KEY AUTO_INCREMENT,
 subject varchar(128) not null, 
    content TEXT not null,
    date datetime not null
);

insert into posts (subject, content, date) VALUES ('This is the subject', 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus euismod sollicitudin viverra. Morbi egestas tincidunt libero, pellentesque mollis augue suscipit id. Mauris elementum magna ac libero elementum, eu tincidunt nibh tempor. Aliquam facilisis mauris velit, ac efficitur est tempor placerat.', '2015-09-07 14:48:04');

INSERT INTO posts (subject, content, date) VALUES ('Application for helpdesk engineer', 'I wish to apply for the above role in your company. I have a BSC in sw eng blah blah', '2018-05-20 17:28:16');

SELECT * FROM posts WHERE id='1';

UPDATE posts SET subject='New subject', content='Some new piece of content here for training' WHERE id='1';

DELETE FROM posts WHERE id='1';

SELECT * FROM posts ORDER BY id ASC;

SELECT * FROM posts ORDER BY subject DESC;

-------------------------Login system ---------------------------------------

CREATE TABLE users (
	user_id int(11) AUTO_INCREMENT PRIMARY KEY not null,
    user_first varchar(256) not null,
    user_last varchar(256) not null,
    user_email varchar(256) not null,
    user_uid varchar(256) not null,
    user_pwd varchar(256) not null
);

INSERT INTO users (user_first, user_last, user_email, user_uid, user_pwd) VALUES ('Carol', 'Mbithe', 'carol@gmail.com', 'admin', 'test123');

INSERT INTO users (user_first, user_last, user_email, user_uid, user_pwd) VALUES ('Jackie', 'Chan', 'jackie@gmail.com', 'jackie67', 'test1234');

-------------------------------------------------------------------------------

<!-- this is basic php code for fetching/selecting data from db & displaying it into our website. don't forget to include dbh.inc.php at the top of the page within php tags

include_once 'includes/dbh.inc.php';

$sql = "SELECT * FROM users;";
$result = mysqli_query($conn, $sql);
$resultCheck = mysqli_num_rows($result);
if ($resultCheck > 0) {
  while ($row = mysqli_fetch_assoc($result)) {
    echo $row['user_uid'] . "<br>";
  }
} -->

--------------------------------------------------------------------------------------------------------------

SELECTING DATA FROM DB INTO OUR WEBSITE USING PREPARED STATEMTNTS. (SAFER against sql insjection). don't forget to include dbh.inc.php at the top of the page within php tags

include_once 'dbh.inc.php';

<?php
$data = "admin";
//Created a template
$sql = "SELECT * FROM users WHERE user_uid=?;";
//create a prepared statement
$stmt = mysqli_stmt_init($conn);
//Prepare the statement
if (!mysqli_stmt_prepare($stmt, $sql)) {
echo "SQL statement failed.";
} else {
  //Bind parameters to the placeholder
  mysqli_stmt_bind_param($stmt, "s", $data);
//Run parameters inside database
mysqli_stmt_execute($stmt);
$result = mysqli_stmt_get_result($stmt);

while ($row = mysqli_fetch_assoc($result)) {
  echo $row['user_uid'] . "<br>";
}
}  
?>


----------------------------------------------------------INSERTING DATA INTO DB (SIGNUP) MSQLI CODE for escaping input characters to protect the db from sql injection. (NB prepared statements are another alternative that are safer to use than bare msqli) ----------------------------------------

<?php
include_once 'dbh.inc.php';

$first = mysqli_real_escape_string($conn, $_POST['first']);
$last = mysqli_real_escape_string($conn, $_POST['last']);
$email =mysqli_real_escape_string($conn, $_POST['email']);
$uid = mysqli_real_escape_string($conn, $_POST['uid']);
$pwd = mysqli_real_escape_string($conn, $_POST['pwd']);

$sql = "INSERT INTO users (user_first, user_last, user_email, user_uid, user_pwd) VALUES ('$first', '$last', '$email', '$uid', '$pwd');";
mysqli_query($conn, $sql);

header("Location: ../index.php?signup=success");
?>


--------------------------------------------------------INSERTING DATA INTO DB. (PREPARED STATEMENTS) signup.inc.php)
-------------------------------------------------------

<?php
include_once 'dbh.inc.php';

$first = mysqli_real_escape_string($conn, $_POST['first']);
$last = mysqli_real_escape_string($conn, $_POST['last']);
$email =mysqli_real_escape_string($conn, $_POST['email']);
$uid = mysqli_real_escape_string($conn, $_POST['uid']);
$pwd = mysqli_real_escape_string($conn, $_POST['pwd']);

$sql = "INSERT INTO users (user_first, user_last, user_email, user_uid, user_pwd) VALUES ('?', '?', '?', '?', '?');";

$stmt = mysqli_stmt_init($conn);
if (!mysqli_stmt_prepare($stmt, $sql)) {
  echo "SQL error";
} else {
mysqli_stmt_bind_param($stmt, "sssss", $first, $last, $email, $uid, $pwd);
mysqli_stmt_execute($stmt);
}

header("Location: ../index.php?signup=success");


-------------------------------------------------
-----------------------------------signup form html code----------------------------------------------

<form action="includes/signup.inc.php" method="POST">
<input type="text" name="first" placeholder="Firstname">
<br>
<input type="text" name="last" placeholder="Lastname">
<br>
<input type="text" name="email" placeholder="E-mail">
<br>
<input type="text" name="uid" placeholder="Username">
<br>
<input type="password" name="pwd" placeholder="Password">
<br>
<button type="submit" name="submit">Sign up</button>
</form>

--------------------------------------------------------------------------------------------------------------ADVANCED ERROR HANDLING METHOD 1 - signup.inc file --------------------------------------------------

<?php
//error handling script + uploading to the database

//check if user has clicked the signup button
if (isset($_POST['submit'])) {

  //include the database connection
include_once 'dbh.inc.php';

//get the data from the signup form
$first = mysqli_real_escape_string($conn, $_POST['first']);
$last = mysqli_real_escape_string($conn, $_POST['last']);
$email =mysqli_real_escape_string($conn, $_POST['email']);
$uid = mysqli_real_escape_string($conn, $_POST['uid']);
$pwd = mysqli_real_escape_string($conn, $_POST['pwd']);

//check whether inputs are empty
if (empty($first) || empty($last) || empty($email) || empty($uid) || empty($pwd)) {
  header("Location: ../index.php?signup=empty");
  exit();
} else {

  //check if input characters are valid
if (!preg_match("/^[a-zA-Z]*$/", $first) || !preg_match("/^[a-zA-Z]*$/", $last)) {
  header("Location: ../index.php?signup=char");
  exit(); 
} else {

//check if email is valid
if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
  header("Location: ../index.php?signup=email");
} else {

  //signup successfully
  $sql = "INSERT INTO users (user_first, user_last, user_email, user_uid, user_pwd) VALUES (?, ?, ?, ?, ?);";

$stmt = mysqli_stmt_init($conn);
if (!mysqli_stmt_prepare($stmt, $sql)) {
  echo "SQL error";
} else {
mysqli_stmt_bind_param($stmt, "sssss", $first, $last, $email, $uid, $pwd);
mysqli_stmt_execute($stmt);
}
  header("Location: ../index.php?signup=success");
  exit();
}
}
}
}
else {
  header("Location: ../index.php?signup=error");
  exit();
}

---------------------------------------------------------------------------------------------------------------
AVANCED ERROR HANDLING METHOD 1 - index.php FORM --------------------------------------------------------

<?php
include_once 'includes/dbh.inc.php';
?>

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link type="text/css" rel="stylesheet" href="styles.css">
  <title>PHPdatabase</title>
</head>
<body>
 
<h2>Sign Up</h2>
<form action="includes/signup2.inc.php" method="POST">
<input type="text" name="first" placeholder="Firstname">
<br>
<input type="text" name="last" placeholder="Lastname">
<br>
<input type="text" name="email" placeholder="E-mail">
<br>
<input type="text" name="uid" placeholder="Username">
<br>
<input type="password" name="pwd" placeholder="Password">
<br>
<button type="submit" name="submit">Sign up</button>
</form>
<?php
$fullUrl = "http://$_SERVER[HTTP_HOST]$_SERVER[REQUEST_URI]";

if (strpos($fullUrl, "signup=empty") == true) {
  echo "<p class='error'>Please fill in all fields!</p>";
  exit();
}
elseif (strpos($fullUrl, "signup=char") == true) {
  echo "<p class='error'>Please use valid characters!</p>";
  exit();
}
elseif (strpos($fullUrl, "signup=email") == true) {
  echo "<p class='error'>Please use a valid e-mail address!</p>";
  exit();
}
elseif (strpos($fullUrl, "signup=success") == true) {
  echo "<p class='success'>You have been signed up successfully!</p>";
  exit();
}
?>
</body>
</html>

-------------------------------------------------------------------------------------------------------------------- ADVANCED ERROR HANDLING METHOD 2 - signupi.inc file form ( with edits to save previuosly typed names and uid when the email is incorrect)----------------------------------------------------

<?php
//error handling script + uploading to the database

//check if user has clicked the signup button
if (isset($_POST['submit'])) {

  //include the database connection
include_once 'dbh.inc.php';

//get the data from the signup form
$first = mysqli_real_escape_string($conn, $_POST['first']);
$last = mysqli_real_escape_string($conn, $_POST['last']);
$email =mysqli_real_escape_string($conn, $_POST['email']);
$uid = mysqli_real_escape_string($conn, $_POST['uid']);
$pwd = mysqli_real_escape_string($conn, $_POST['pwd']);

//check whether inputs are empty
if (empty($first) || empty($last) || empty($email) || empty($uid) || empty($pwd)) {
  header("Location: ../index.php?signup=empty");
  exit();
} else {
  //check if input characters are valid
if (!preg_match("/^[a-zA-Z]*$/", $first) || !preg_match("/^[a-zA-Z]*$/", $last)) {
  header("Location: ../index.php?signup=char");
  exit(); 
} else {
//check if email is valid
if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
  header("Location: ../index.php?signup=email&first=$first&last=$last&uid=$uid");
  exit();
} else {
  //signup successfully
  $sql = "INSERT INTO users (user_first, user_last, user_email, user_uid, user_pwd) VALUES (?, ?, ?, ?, ?);";

$stmt = mysqli_stmt_init($conn);
if (!mysqli_stmt_prepare($stmt, $sql)) {
  echo "SQL error";
} else {
mysqli_stmt_bind_param($stmt, "sssss", $first, $last, $email, $uid, $pwd);
mysqli_stmt_execute($stmt);
}
  header("Location: ../index.php?signup=success");
  exit();
}
}
}
}
else {
  header("Location: ../index.php?signup=error");
  exit();
}

-------------------------------------------------------------------------------------------------------- ADVANCED ERROR HANDLING METHOD 2  - index.php file (uses the signupCheck variable to check for signup input errors with $_GET method )--------------------------------------------------------
<?php
include_once 'includes/dbh.inc.php';
?>

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link type="text/css" rel="stylesheet" href="styles.css">
  <title>PHPdatabase</title>
</head>

<body>
<h2>Sign Up</h2>

<form action="includes/signup2.inc.php" method="POST">

<?php
if (isset($_GET['first'])) {
  $first =  $_GET['first'];
  echo '<input type="text" name="first" placeholder="Firstname" value="'.$first.'"><br>';
}
else {
  echo '<input type="text" name="first" placeholder="Firstname"><br>';
}
if (isset($_GET['last'])) {
  $last =  $_GET['last'];
  echo '<input type="text" name="last" placeholder="Lastname" value="'.$last.'"><br>';
}
else {
  echo '<input type="text" name="last" placeholder="Lastname"><br>';
}
?>
<input type="text" name="email" placeholder="E-mail">
<br>
<?php
if (isset($_GET['uid'])) {
  $uid =  $_GET['uid'];
  echo '<input type="text" name="uid" placeholder="Username" value="'.$uid.'"><br>';
}
else {
  echo '<input type="text" name="uid" placeholder="Username"><br>';
}
?>
<input type="password" name="pwd" placeholder="Password">
<br>
<button type="submit" name="submit">Sign up</button>
</form>

<?php
if (!isset($_GET['signup'])) {
exit();
}
else {
$signupCheck = $_GET['signup'];

if ($signupCheck == "empty") {
  echo "<p class='error'>Please fill in all fields!</p>";
  exit();
}
elseif ($signupCheck == "char") {
  echo "<p class='error'>Please make sure to use valid characters for your name!</p>";
  exit();
}
elseif ($signupCheck == "email") {
  echo "<p class='error'>Please enter a valid e-mail address!</p>";
  exit();
}
elseif ($signupCheck == "success") {
  echo "<p class='success'>You have been signed up successfully!</p>";
  exit();
}
}
?>
</body>
</html>

---------------------------------------------------------------------------------------------------------------HASHING AND DE-HASHING PASSWORDS---------------------

<?php

//hashing the users's input

$input = "test13";
$hashedPwdInDb = password_hash($input, PASSWORD_DEFAULT);

//verifying that the hashed data in the db is the same as the user input. a result of boolean 1 is true. and vice versa

echo password_verify($input, $hashedPwdInDb);

?>

---------------------------------------------------------ADDING DATA INTO AARRAYS USING ARRAY_PUSH ---------------------------------------------------
<?php

$data = array("first", "second");

array_push($data, "Jackie", 15, "Kefa");

print_r($data);

?>

-------------------------------------------------------- INSERTING DATABASE RESULTS INTO AN ARRAY AND DISPLAYING IT OUT TO OUR WEBSITE----NB. must include dbh.inc.php at top of index page-------------------------------------

<?php
$sql = "SELECT * FROM data";
$result = mysqli_query($conn, $sql);
$datas = array();
if (mysqli_num_rows($result) > 0) {
  while ($row = mysqli_fetch_assoc($result)) {
    $datas[] = $row;
  }
}
//to get all the data within a specific column

foreach ($datas as $data) {
echo $data['texts']. " ";
}
?>

or 
(//to get data per row
foreach ($datas[0] as $data) {
  echo $data;
  } )

  -------------------------------------------------------------ASSOCIATIVE ARRAYS -----------------------------------------------------

  //Associative arrays
$data = array("first"=>"Jackie", "last"=>"Kefa", "age"=>32);
echo $data["first"];

//or can be declared as
$data["first"] = "Jackie";
$data["last"] = "Kefa";
$data["age"] = 32;
print_r($data);
------------------------------------------------------------MULTIDIMENSIONAL ARRAYS -------------------------------------------------------

<?php
//Multidimensional arrays
$data = array(array(1, 2, 3), "Jackie", "Kefa");

echo $data[0][1];

?>

--------------------------------------------------------------------- PHP CODE FRO UPLOADING IMAGES --------------------------------------------------

<?php
if (isset($_POST['submit'])) {
$file = $_FILES['file'];
//the below lines can also be written as(harder to read but probably safer)
//$fileName = $_FILES['file']['name']
$fileName = $file['name'];
$fileTmpName = $file['tmp_name'];
$fileSize = $file['size'];
$fileError = $file['error'];
$fileType = $file['type'];

$fileExt = explode('.', $fileName);
$fileActualExt = strtolower(end($fileExt));

$allowed = array('jpg', 'jpeg', 'png', 'pdf');

if (in_array($fileActualExt, $allowed)) {
if ($fileError === 0) {
if ($fileSize < 1000000) {
$fileNameNew = uniqid('', true).".".$fileActualExt;
$fileDestination = 'uploads/'.$fileNameNew;
move_uploaded_file($fileTmpName, $fileDestination);
header("Location: index.php?uploadsuccess");

} else {
  echo "Your file is too big!";
}
} else {
  echo "There was an error uploading your file!";
}
} else {
  echo "You cannot upload files of this type!";
}
}

--------------------------------------------------------------UPLOADING IMAGES frontend index.php ----------------------------------------------------

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link type="text/css" rel="stylesheet" href="styles.css">
  <title>PHPdatabase</title>
</head>
<body>
<form action="upload.php" method="POST" enctype="multipart/form-data">
<input type="file" name="file">
<button type="submit" name="submit">UPLOAD</button>
</form>
</body>
</html>

--------------------------------------------------------------------